<?xml version="1.0" encoding="UTF-8"?>
<project name="shared_build">
    <property environment="env"/>

    <dirname property="shared.build.file.dir" file="${ant.file.shared_build}"/>
    <loadproperties srcfile="${shared.build.file.dir}/build.properties"/>
    <property name="compiler.args.application" value=""/>
    <property name="output.production.dir" value="../out/production"/>
    <property name="output.test.dir" value="../out/test"/>
    <property name="output.succor.dir" value="../out/succor"/>

    <taskdef resource="testngtasks" classpath="../lib/local/testng/testng-6.0.jar"/>
    <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>

    <path id="lib.classpath">
        <fileset dir="${env.JAVA_HOME}/jre/lib">
            <include name="**/*.jar"/>
        </fileset>
        <fileset dir="../lib">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <macrodef name="init-module">
        <attribute name="module"/>
        <sequential>
            <path id="@{module}.source.path">
                <dirset dir=".">
                    <include name="src"/>
                </dirset>
            </path>

            <path id="@{module}.test.path">
                <dirset dir=".">
                    <include name="test"/>
                </dirset>
            </path>
        </sequential>
    </macrodef>

    <macrodef name="compile">
        <attribute name="module"/>
        <attribute name="code.path"/>
        <attribute name="output.dir"/>
        <attribute name="classpath"/>
        <sequential>
            <if>
                <available file="@{code.path}"/>
                <then>
                    <echo message="@{classpath}" level="debug"/>
                    <init-module module="@{module}"/>
                    <mkdir dir="@{output.dir}/@{module}"/>
                    <javac destdir="@{output.dir}/@{module}" fork="true" includeantruntime="false" debug="true" bootclasspathref="lib.classpath"
                           classpath="@{classpath}">
                        <compilerarg line="${compiler.args.application}"/>
                        <src path="@{code.path}"/>
                    </javac>
                </then>
            </if>
        </sequential>
    </macrodef>

    <macrodef name="compile-module-source">
        <attribute name="module"/>
        <sequential>
            <compile module="@{module}" output.dir="${output.production.dir}" code.path="../@{module}/src" classpath="${dependent.source.classpath}"/>
            <copy todir="${output.production.dir}/@{module}">
                <fileset dir="resources" erroronmissingdir="false"/>
            </copy>
            <compile module="@{module}" output.dir="${output.succor.dir}" code.path="../@{module}/succor" classpath="${dependent.succor.classpath}"/>
        </sequential>
    </macrodef>

    <macrodef name="compile-module-test">
        <attribute name="module"/>
        <sequential>
            <compile module="@{module}" output.dir="${output.test.dir}" code.path="../@{module}/test" classpath="${dependent.test.classpath}"/>
        </sequential>
    </macrodef>

    <macrodef name="clean-module">
        <attribute name="module"/>
        <sequential>
            <delete dir="${output.production.dir}/@{module}"/>
            <delete dir="${output.test.dir}/@{module}"/>
            <delete dir="${output.succor.dir}/@{module}"/>
        </sequential>
    </macrodef>

    <macrodef name="test-module">
        <attribute name="module"/>
        <sequential>
            <if>
                <available file="../out/test/@{module}"/>
                <then>
                    <testng outputDir="../out/test/@{module}">
                        <classfileset dir="../out/test/@{module}" includes="**/*.class"/>
                        <classpath refid="lib.classpath"/>
                        <classpath path="${dependent.source.classpath};../out/production/@{module};../out/test/@{module}"/>
                    </testng>
                </then>
            </if>
        </sequential>
    </macrodef>
</project>